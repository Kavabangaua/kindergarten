name: Python app deploy on aws by gitAction v1

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  main_job:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests
      run: |
        python3 -m unittest Test.py
      env:
        CI: true

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/kid_queue_app:latest     

    - name: Setup Terraform
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      uses: hashicorp/setup-terraform@v2
      with:
          terraform_version: 1.0.1
          terraform_wrapper: false

    - name: Debug: List files in Terraform directory
      run: ls -l terraform

    - name: Terraform Format
      working-directory: terraform
      run: terraform fmt -check
      continue-on-error: true
      
    - name: Terraform Init
      working-directory: terraform
      env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}         
      run: terraform plan -no-color -input=false -refresh=true
    
    - name: Terraform Apply
      working-directory: terraform
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -input=false -auto-approve